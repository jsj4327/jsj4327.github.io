{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6211\u7684mkdocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. \u6211\u7684\u7b2c\u4e00\u4e2a 123 import socket import struct # \u5168\u5c40\u53d8\u91cf\u8ba1\u7b97\u5305\u7684\u6570\u76ee g_blknum = 0 # \u5168\u5c40\u53d8\u91cf\u4fdd\u5b58\u6587\u4ef6\u5bf9\u8c61 g_rf = None # \u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u62a5\u6587\u5b57\u6bb5 reqtext = struct.pack( !H14sb5sb , 1, b ipython.tar.gz , 0, b octet , 0) print(reqtext) # \u521b\u5efaUDP\u5957\u63a5\u5b57 udps = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u6784\u5efa\u670d\u52a1\u5668\u7684\u6570\u636e\u5143\u7ec4\uff0c\u5305\u542bip\u548c\u7aef\u53e3 server = ( 192.168.0.108 , 69) # \u53d1\u9001\u62a5\u6587\u8bf7\u6c42 udps.sendto(reqtext, server) while True: # \u63a5\u6536\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u7684\u6570\u636e data = udps.recvfrom(1024) # print(len(data[0])) # print(data[0]) # data\u662f\u4e2a\u5143\u7ec4\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u548c\u670d\u52a1\u5668ip\u53ca\u7aef\u53e3 # \u628a\u7eaf\u6570\u636e\u90e8\u5206\u5b58\u5165rdata rdata = data[0] # \u628a\u7aef\u53e3\u53f7\u5b58\u5165serverport serverport = data[1][1] # print(rdata) # print(serverport) # \u628a\u8fd4\u56de\u6570\u636e\u7684\u64cd\u4f5c\u7801\u548c\u5757\u53f7\u5b58\u5165opblk\uff0c\u518d\u62c6\u5305 opblk = struct.unpack( !HH , rdata[0:4]) opcode, block = opblk # print(opcode) print( reveive: ) print(block) # \u5982\u679c\u662f\u6570\u636e\u5305\uff0c\u5219\u5f00\u59cb\u5904\u7406 if opcode == 3: print( ipcode3 ) # \u5982\u679c\u662f\u7b2c\u4e00\u5757\uff0c\u5219\u8981\u521b\u5efa\u6587\u4ef6\uff0c\u5e76\u5199\u5165 if block == 1: print( block 1 ) g_rf = open( ipython.tar.gz , wb ) g_rf.write(rdata[4:]) g_blknum += 1 ackt = struct.pack( !HH , 4, block) print(ackt) udps.sendto(ackt, ( 192.168.0.108 , serverport)) # \u540e\u7eed\u5757\uff0c\u5224\u65ad\u987a\u5e8f\u662f\u5426\u662f\u9884\u671f\u5e0c\u671b\u7684\uff0c\u662f\u5219\u7ee7\u7eed\u5199\u5165 if (g_blknum+1) == block: # print( block %d % block) if len(data[0]) == 516: g_rf.write(rdata[4:]) g_blknum += 1 ackt = struct.pack( !HH , 4, block) print(ackt) print( ackbolk +str(block)) udps.sendto(ackt, ( 192.168.0.108 , serverport)) else: #\u5982\u679c\u4e0d\u662f516\u5b57\u8282\uff0c\u5219\u662f\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u5199\u5b8c\u5c31\u5173\u95ed g_rf.write(rdata[4:]) ackt = struct.pack( !HH , 4, block) udps.sendto(ackt, ( 192.168.0.108 , serverport)) g_rf.close() print( Down load Success! ) break #\u5dee\u9519\u63a7\u5236\uff0c\u5982\u679c\u53d1\u6765\u7684\u6570\u636e\u5757\u662f\u4e0a\u6b21\u63a5\u6536\u8fc7\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u786e\u8ba4\u6570\u636e\u5305\uff0c\u4e0d\u518d\u5199\u5165 elif g_blknum == block: ackt = struct.pack( !HH , 4, block) udps.sendto(ackt, ( 192.168.0.108 , serverport)) else: print( g_blknum= +str(g_blknum)) print( block= +str(block)) if opcode == 5: print( Down load fialed ) break print(g_blknum)","title":"H2"},{"location":"#mkdocs","text":"For full documentation visit mkdocs.org .","title":"\u6211\u7684mkdocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#_1","text":"123 import socket import struct # \u5168\u5c40\u53d8\u91cf\u8ba1\u7b97\u5305\u7684\u6570\u76ee g_blknum = 0 # \u5168\u5c40\u53d8\u91cf\u4fdd\u5b58\u6587\u4ef6\u5bf9\u8c61 g_rf = None # \u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u62a5\u6587\u5b57\u6bb5 reqtext = struct.pack( !H14sb5sb , 1, b ipython.tar.gz , 0, b octet , 0) print(reqtext) # \u521b\u5efaUDP\u5957\u63a5\u5b57 udps = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u6784\u5efa\u670d\u52a1\u5668\u7684\u6570\u636e\u5143\u7ec4\uff0c\u5305\u542bip\u548c\u7aef\u53e3 server = ( 192.168.0.108 , 69) # \u53d1\u9001\u62a5\u6587\u8bf7\u6c42 udps.sendto(reqtext, server) while True: # \u63a5\u6536\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u7684\u6570\u636e data = udps.recvfrom(1024) # print(len(data[0])) # print(data[0]) # data\u662f\u4e2a\u5143\u7ec4\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u548c\u670d\u52a1\u5668ip\u53ca\u7aef\u53e3 # \u628a\u7eaf\u6570\u636e\u90e8\u5206\u5b58\u5165rdata rdata = data[0] # \u628a\u7aef\u53e3\u53f7\u5b58\u5165serverport serverport = data[1][1] # print(rdata) # print(serverport) # \u628a\u8fd4\u56de\u6570\u636e\u7684\u64cd\u4f5c\u7801\u548c\u5757\u53f7\u5b58\u5165opblk\uff0c\u518d\u62c6\u5305 opblk = struct.unpack( !HH , rdata[0:4]) opcode, block = opblk # print(opcode) print( reveive: ) print(block) # \u5982\u679c\u662f\u6570\u636e\u5305\uff0c\u5219\u5f00\u59cb\u5904\u7406 if opcode == 3: print( ipcode3 ) # \u5982\u679c\u662f\u7b2c\u4e00\u5757\uff0c\u5219\u8981\u521b\u5efa\u6587\u4ef6\uff0c\u5e76\u5199\u5165 if block == 1: print( block 1 ) g_rf = open( ipython.tar.gz , wb ) g_rf.write(rdata[4:]) g_blknum += 1 ackt = struct.pack( !HH , 4, block) print(ackt) udps.sendto(ackt, ( 192.168.0.108 , serverport)) # \u540e\u7eed\u5757\uff0c\u5224\u65ad\u987a\u5e8f\u662f\u5426\u662f\u9884\u671f\u5e0c\u671b\u7684\uff0c\u662f\u5219\u7ee7\u7eed\u5199\u5165 if (g_blknum+1) == block: # print( block %d % block) if len(data[0]) == 516: g_rf.write(rdata[4:]) g_blknum += 1 ackt = struct.pack( !HH , 4, block) print(ackt) print( ackbolk +str(block)) udps.sendto(ackt, ( 192.168.0.108 , serverport)) else: #\u5982\u679c\u4e0d\u662f516\u5b57\u8282\uff0c\u5219\u662f\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5305\uff0c\u5199\u5b8c\u5c31\u5173\u95ed g_rf.write(rdata[4:]) ackt = struct.pack( !HH , 4, block) udps.sendto(ackt, ( 192.168.0.108 , serverport)) g_rf.close() print( Down load Success! ) break #\u5dee\u9519\u63a7\u5236\uff0c\u5982\u679c\u53d1\u6765\u7684\u6570\u636e\u5757\u662f\u4e0a\u6b21\u63a5\u6536\u8fc7\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u786e\u8ba4\u6570\u636e\u5305\uff0c\u4e0d\u518d\u5199\u5165 elif g_blknum == block: ackt = struct.pack( !HH , 4, block) udps.sendto(ackt, ( 192.168.0.108 , serverport)) else: print( g_blknum= +str(g_blknum)) print( block= +str(block)) if opcode == 5: print( Down load fialed ) break print(g_blknum)","title":"\u6211\u7684\u7b2c\u4e00\u4e2a"},{"location":"about/","text":"Si atque Ut mihi Lorem markdownum putes volucres stridore stantemque porrigitur dedit: sonat inimica videbitur ; quibus. Timoris una. Aptae simul umbras: cum et limosaque veri primumque nulla. Proceres possis caelestibus locus, vultus ille Aetne fuit Peneos currum properantibus ullo transibant parvae poteras: ipsas. Idaei nec mora qualis aliquando nate, haeremusque tamquam et plura pudorem, misit pennas quaeritur Cepheus. wave(databaseArchie + registry_status_webcam, sms / 1, font); motionGnutellaPort.adapter_ftp_quicktime -= bit_directx( networkFrequencyInteractive(bluEngineWired, ole(72366, file_unc), pdfBarPaste - page_fat), floodExploitPage + wildcard, trim(key, 2) / ugc); adVeronicaBash.keystroke_copyright(shareware); var pdaArtificial = thickJre.backboneJsp(controllerUpnp / wordBarebonesBus + 3); disk = drive_service_php(unfriend(subnet, 3, menu), gis + -1) / 5; Tanto ira nubibus Icarus spes et Nec causamque vidit. Eundi in oritur! Forma excipit coma Enim eras fulvum altera gremio instructa Pergama Loquebatur Boeotaque utinam plectro florem floresque repetendus Matertera alit Themis sanguine talaria genus primae, sua de locoque, vos qui, caelum vocat: exsiluere! Genus iuvenem et perque veniam si carinae adsunt nec Enipeus, est tegis, cristata illos, nocent forma adunca! Tiresia arcitenens , Iovis posito parte promissa orbis, apro. Voce se est. Magna solas coniunx torrentur spatium pallidiora lebetes numerandos ferum exululat frequentant alligat. Non vivo tellus inbutam , et ossa utque tardaque adamanteis. Cognita sinu: nunc numen nec securi , profecto futuri vocalia abscidit patietur. Iugum cautes pollue Lacedaemoniumque venisse legesque sed; posse in igni, classis. Habet punior sollertia nec, et certe vinci socerumque sine heu illi caelo ineunt, sola tibi amor Caucasiumque pecudes?","title":"About"},{"location":"about/#si-atque","text":"","title":"Si atque"},{"location":"about/#ut-mihi","text":"Lorem markdownum putes volucres stridore stantemque porrigitur dedit: sonat inimica videbitur ; quibus. Timoris una. Aptae simul umbras: cum et limosaque veri primumque nulla. Proceres possis caelestibus locus, vultus ille Aetne fuit Peneos currum properantibus ullo transibant parvae poteras: ipsas. Idaei nec mora qualis aliquando nate, haeremusque tamquam et plura pudorem, misit pennas quaeritur Cepheus. wave(databaseArchie + registry_status_webcam, sms / 1, font); motionGnutellaPort.adapter_ftp_quicktime -= bit_directx( networkFrequencyInteractive(bluEngineWired, ole(72366, file_unc), pdfBarPaste - page_fat), floodExploitPage + wildcard, trim(key, 2) / ugc); adVeronicaBash.keystroke_copyright(shareware); var pdaArtificial = thickJre.backboneJsp(controllerUpnp / wordBarebonesBus + 3); disk = drive_service_php(unfriend(subnet, 3, menu), gis + -1) / 5;","title":"Ut mihi"},{"location":"about/#tanto-ira-nubibus-icarus-spes-et","text":"Nec causamque vidit. Eundi in oritur! Forma excipit coma Enim eras fulvum altera gremio instructa Pergama Loquebatur Boeotaque utinam plectro florem floresque repetendus","title":"Tanto ira nubibus Icarus spes et"},{"location":"about/#matertera-alit","text":"Themis sanguine talaria genus primae, sua de locoque, vos qui, caelum vocat: exsiluere! Genus iuvenem et perque veniam si carinae adsunt nec Enipeus, est tegis, cristata illos, nocent forma adunca! Tiresia arcitenens , Iovis posito parte promissa orbis, apro. Voce se est. Magna solas coniunx torrentur spatium pallidiora lebetes numerandos ferum exululat frequentant alligat. Non vivo tellus inbutam , et ossa utque tardaque adamanteis. Cognita sinu: nunc numen nec securi , profecto futuri vocalia abscidit patietur. Iugum cautes pollue Lacedaemoniumque venisse legesque sed; posse in igni, classis. Habet punior sollertia nec, et certe vinci socerumque sine heu illi caelo ineunt, sola tibi amor Caucasiumque pecudes?","title":"Matertera alit"},{"location":"license/","text":"\u6211\u7684mkdocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. \u6211\u7684\u7b2c\u4e00\u4e2a 123","title":"License"},{"location":"license/#mkdocs","text":"For full documentation visit mkdocs.org .","title":"\u6211\u7684mkdocs"},{"location":"license/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"license/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"license/#_1","text":"123","title":"\u6211\u7684\u7b2c\u4e00\u4e2a"}]}